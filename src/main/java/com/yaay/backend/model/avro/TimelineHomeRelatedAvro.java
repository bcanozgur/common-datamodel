/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.yaay.backend.model.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class TimelineHomeRelatedAvro extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -2819807542927306177L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"TimelineHomeRelatedAvro\",\"namespace\":\"com.yaay.backend.model.avro\",\"fields\":[{\"name\":\"timelineUserID\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"relationChange\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"RelationChangeAvro\",\"fields\":[{\"name\":\"sourceId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"targetId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"relation\",\"type\":[\"null\",{\"type\":\"enum\",\"name\":\"RelationAvro\",\"symbols\":[\"MUTED\",\"FOLLOWS\",\"BLOCKED\"]}],\"default\":null},{\"name\":\"deleted\",\"type\":[\"null\",\"boolean\"],\"default\":null}]}],\"default\":null},{\"name\":\"fanoutPostChange\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"PostChangeAvro\",\"fields\":[{\"name\":\"userID\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"postID\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"postedAt\",\"type\":[\"null\",{\"type\":\"long\",\"logicalType\":\"local-timestamp-millis\"}],\"default\":null},{\"name\":\"operation\",\"type\":[\"null\",{\"type\":\"enum\",\"name\":\"OperationAvro\",\"symbols\":[\"CREATE\",\"UPDATE\",\"DELETE\"]}],\"default\":null},{\"name\":\"hashtag\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"content\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"hasImage\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"hasVideo\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"lat\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"lon\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"category\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();
  static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.LocalTimestampMillisConversion());
  }

  private static final BinaryMessageEncoder<TimelineHomeRelatedAvro> ENCODER =
      new BinaryMessageEncoder<TimelineHomeRelatedAvro>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<TimelineHomeRelatedAvro> DECODER =
      new BinaryMessageDecoder<TimelineHomeRelatedAvro>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<TimelineHomeRelatedAvro> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<TimelineHomeRelatedAvro> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<TimelineHomeRelatedAvro> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<TimelineHomeRelatedAvro>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this TimelineHomeRelatedAvro to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a TimelineHomeRelatedAvro from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a TimelineHomeRelatedAvro instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static TimelineHomeRelatedAvro fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.String timelineUserID;
  private com.yaay.backend.model.avro.RelationChangeAvro relationChange;
  private com.yaay.backend.model.avro.PostChangeAvro fanoutPostChange;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public TimelineHomeRelatedAvro() {}

  /**
   * All-args constructor.
   * @param timelineUserID The new value for timelineUserID
   * @param relationChange The new value for relationChange
   * @param fanoutPostChange The new value for fanoutPostChange
   */
  public TimelineHomeRelatedAvro(java.lang.String timelineUserID, com.yaay.backend.model.avro.RelationChangeAvro relationChange, com.yaay.backend.model.avro.PostChangeAvro fanoutPostChange) {
    this.timelineUserID = timelineUserID;
    this.relationChange = relationChange;
    this.fanoutPostChange = fanoutPostChange;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return timelineUserID;
    case 1: return relationChange;
    case 2: return fanoutPostChange;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: timelineUserID = value$ != null ? value$.toString() : null; break;
    case 1: relationChange = (com.yaay.backend.model.avro.RelationChangeAvro)value$; break;
    case 2: fanoutPostChange = (com.yaay.backend.model.avro.PostChangeAvro)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'timelineUserID' field.
   * @return The value of the 'timelineUserID' field.
   */
  public java.lang.String getTimelineUserID() {
    return timelineUserID;
  }


  /**
   * Sets the value of the 'timelineUserID' field.
   * @param value the value to set.
   */
  public void setTimelineUserID(java.lang.String value) {
    this.timelineUserID = value;
  }

  /**
   * Gets the value of the 'relationChange' field.
   * @return The value of the 'relationChange' field.
   */
  public com.yaay.backend.model.avro.RelationChangeAvro getRelationChange() {
    return relationChange;
  }


  /**
   * Sets the value of the 'relationChange' field.
   * @param value the value to set.
   */
  public void setRelationChange(com.yaay.backend.model.avro.RelationChangeAvro value) {
    this.relationChange = value;
  }

  /**
   * Gets the value of the 'fanoutPostChange' field.
   * @return The value of the 'fanoutPostChange' field.
   */
  public com.yaay.backend.model.avro.PostChangeAvro getFanoutPostChange() {
    return fanoutPostChange;
  }


  /**
   * Sets the value of the 'fanoutPostChange' field.
   * @param value the value to set.
   */
  public void setFanoutPostChange(com.yaay.backend.model.avro.PostChangeAvro value) {
    this.fanoutPostChange = value;
  }

  /**
   * Creates a new TimelineHomeRelatedAvro RecordBuilder.
   * @return A new TimelineHomeRelatedAvro RecordBuilder
   */
  public static com.yaay.backend.model.avro.TimelineHomeRelatedAvro.Builder newBuilder() {
    return new com.yaay.backend.model.avro.TimelineHomeRelatedAvro.Builder();
  }

  /**
   * Creates a new TimelineHomeRelatedAvro RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new TimelineHomeRelatedAvro RecordBuilder
   */
  public static com.yaay.backend.model.avro.TimelineHomeRelatedAvro.Builder newBuilder(com.yaay.backend.model.avro.TimelineHomeRelatedAvro.Builder other) {
    if (other == null) {
      return new com.yaay.backend.model.avro.TimelineHomeRelatedAvro.Builder();
    } else {
      return new com.yaay.backend.model.avro.TimelineHomeRelatedAvro.Builder(other);
    }
  }

  /**
   * Creates a new TimelineHomeRelatedAvro RecordBuilder by copying an existing TimelineHomeRelatedAvro instance.
   * @param other The existing instance to copy.
   * @return A new TimelineHomeRelatedAvro RecordBuilder
   */
  public static com.yaay.backend.model.avro.TimelineHomeRelatedAvro.Builder newBuilder(com.yaay.backend.model.avro.TimelineHomeRelatedAvro other) {
    if (other == null) {
      return new com.yaay.backend.model.avro.TimelineHomeRelatedAvro.Builder();
    } else {
      return new com.yaay.backend.model.avro.TimelineHomeRelatedAvro.Builder(other);
    }
  }

  /**
   * RecordBuilder for TimelineHomeRelatedAvro instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<TimelineHomeRelatedAvro>
    implements org.apache.avro.data.RecordBuilder<TimelineHomeRelatedAvro> {

    private java.lang.String timelineUserID;
    private com.yaay.backend.model.avro.RelationChangeAvro relationChange;
    private com.yaay.backend.model.avro.RelationChangeAvro.Builder relationChangeBuilder;
    private com.yaay.backend.model.avro.PostChangeAvro fanoutPostChange;
    private com.yaay.backend.model.avro.PostChangeAvro.Builder fanoutPostChangeBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.yaay.backend.model.avro.TimelineHomeRelatedAvro.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.timelineUserID)) {
        this.timelineUserID = data().deepCopy(fields()[0].schema(), other.timelineUserID);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.relationChange)) {
        this.relationChange = data().deepCopy(fields()[1].schema(), other.relationChange);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (other.hasRelationChangeBuilder()) {
        this.relationChangeBuilder = com.yaay.backend.model.avro.RelationChangeAvro.newBuilder(other.getRelationChangeBuilder());
      }
      if (isValidValue(fields()[2], other.fanoutPostChange)) {
        this.fanoutPostChange = data().deepCopy(fields()[2].schema(), other.fanoutPostChange);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (other.hasFanoutPostChangeBuilder()) {
        this.fanoutPostChangeBuilder = com.yaay.backend.model.avro.PostChangeAvro.newBuilder(other.getFanoutPostChangeBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing TimelineHomeRelatedAvro instance
     * @param other The existing instance to copy.
     */
    private Builder(com.yaay.backend.model.avro.TimelineHomeRelatedAvro other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.timelineUserID)) {
        this.timelineUserID = data().deepCopy(fields()[0].schema(), other.timelineUserID);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.relationChange)) {
        this.relationChange = data().deepCopy(fields()[1].schema(), other.relationChange);
        fieldSetFlags()[1] = true;
      }
      this.relationChangeBuilder = null;
      if (isValidValue(fields()[2], other.fanoutPostChange)) {
        this.fanoutPostChange = data().deepCopy(fields()[2].schema(), other.fanoutPostChange);
        fieldSetFlags()[2] = true;
      }
      this.fanoutPostChangeBuilder = null;
    }

    /**
      * Gets the value of the 'timelineUserID' field.
      * @return The value.
      */
    public java.lang.String getTimelineUserID() {
      return timelineUserID;
    }


    /**
      * Sets the value of the 'timelineUserID' field.
      * @param value The value of 'timelineUserID'.
      * @return This builder.
      */
    public com.yaay.backend.model.avro.TimelineHomeRelatedAvro.Builder setTimelineUserID(java.lang.String value) {
      validate(fields()[0], value);
      this.timelineUserID = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'timelineUserID' field has been set.
      * @return True if the 'timelineUserID' field has been set, false otherwise.
      */
    public boolean hasTimelineUserID() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'timelineUserID' field.
      * @return This builder.
      */
    public com.yaay.backend.model.avro.TimelineHomeRelatedAvro.Builder clearTimelineUserID() {
      timelineUserID = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'relationChange' field.
      * @return The value.
      */
    public com.yaay.backend.model.avro.RelationChangeAvro getRelationChange() {
      return relationChange;
    }


    /**
      * Sets the value of the 'relationChange' field.
      * @param value The value of 'relationChange'.
      * @return This builder.
      */
    public com.yaay.backend.model.avro.TimelineHomeRelatedAvro.Builder setRelationChange(com.yaay.backend.model.avro.RelationChangeAvro value) {
      validate(fields()[1], value);
      this.relationChangeBuilder = null;
      this.relationChange = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'relationChange' field has been set.
      * @return True if the 'relationChange' field has been set, false otherwise.
      */
    public boolean hasRelationChange() {
      return fieldSetFlags()[1];
    }

    /**
     * Gets the Builder instance for the 'relationChange' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.yaay.backend.model.avro.RelationChangeAvro.Builder getRelationChangeBuilder() {
      if (relationChangeBuilder == null) {
        if (hasRelationChange()) {
          setRelationChangeBuilder(com.yaay.backend.model.avro.RelationChangeAvro.newBuilder(relationChange));
        } else {
          setRelationChangeBuilder(com.yaay.backend.model.avro.RelationChangeAvro.newBuilder());
        }
      }
      return relationChangeBuilder;
    }

    /**
     * Sets the Builder instance for the 'relationChange' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public com.yaay.backend.model.avro.TimelineHomeRelatedAvro.Builder setRelationChangeBuilder(com.yaay.backend.model.avro.RelationChangeAvro.Builder value) {
      clearRelationChange();
      relationChangeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'relationChange' field has an active Builder instance
     * @return True if the 'relationChange' field has an active Builder instance
     */
    public boolean hasRelationChangeBuilder() {
      return relationChangeBuilder != null;
    }

    /**
      * Clears the value of the 'relationChange' field.
      * @return This builder.
      */
    public com.yaay.backend.model.avro.TimelineHomeRelatedAvro.Builder clearRelationChange() {
      relationChange = null;
      relationChangeBuilder = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'fanoutPostChange' field.
      * @return The value.
      */
    public com.yaay.backend.model.avro.PostChangeAvro getFanoutPostChange() {
      return fanoutPostChange;
    }


    /**
      * Sets the value of the 'fanoutPostChange' field.
      * @param value The value of 'fanoutPostChange'.
      * @return This builder.
      */
    public com.yaay.backend.model.avro.TimelineHomeRelatedAvro.Builder setFanoutPostChange(com.yaay.backend.model.avro.PostChangeAvro value) {
      validate(fields()[2], value);
      this.fanoutPostChangeBuilder = null;
      this.fanoutPostChange = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'fanoutPostChange' field has been set.
      * @return True if the 'fanoutPostChange' field has been set, false otherwise.
      */
    public boolean hasFanoutPostChange() {
      return fieldSetFlags()[2];
    }

    /**
     * Gets the Builder instance for the 'fanoutPostChange' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.yaay.backend.model.avro.PostChangeAvro.Builder getFanoutPostChangeBuilder() {
      if (fanoutPostChangeBuilder == null) {
        if (hasFanoutPostChange()) {
          setFanoutPostChangeBuilder(com.yaay.backend.model.avro.PostChangeAvro.newBuilder(fanoutPostChange));
        } else {
          setFanoutPostChangeBuilder(com.yaay.backend.model.avro.PostChangeAvro.newBuilder());
        }
      }
      return fanoutPostChangeBuilder;
    }

    /**
     * Sets the Builder instance for the 'fanoutPostChange' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public com.yaay.backend.model.avro.TimelineHomeRelatedAvro.Builder setFanoutPostChangeBuilder(com.yaay.backend.model.avro.PostChangeAvro.Builder value) {
      clearFanoutPostChange();
      fanoutPostChangeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'fanoutPostChange' field has an active Builder instance
     * @return True if the 'fanoutPostChange' field has an active Builder instance
     */
    public boolean hasFanoutPostChangeBuilder() {
      return fanoutPostChangeBuilder != null;
    }

    /**
      * Clears the value of the 'fanoutPostChange' field.
      * @return This builder.
      */
    public com.yaay.backend.model.avro.TimelineHomeRelatedAvro.Builder clearFanoutPostChange() {
      fanoutPostChange = null;
      fanoutPostChangeBuilder = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public TimelineHomeRelatedAvro build() {
      try {
        TimelineHomeRelatedAvro record = new TimelineHomeRelatedAvro();
        record.timelineUserID = fieldSetFlags()[0] ? this.timelineUserID : (java.lang.String) defaultValue(fields()[0]);
        if (relationChangeBuilder != null) {
          try {
            record.relationChange = this.relationChangeBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("relationChange"));
            throw e;
          }
        } else {
          record.relationChange = fieldSetFlags()[1] ? this.relationChange : (com.yaay.backend.model.avro.RelationChangeAvro) defaultValue(fields()[1]);
        }
        if (fanoutPostChangeBuilder != null) {
          try {
            record.fanoutPostChange = this.fanoutPostChangeBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("fanoutPostChange"));
            throw e;
          }
        } else {
          record.fanoutPostChange = fieldSetFlags()[2] ? this.fanoutPostChange : (com.yaay.backend.model.avro.PostChangeAvro) defaultValue(fields()[2]);
        }
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<TimelineHomeRelatedAvro>
    WRITER$ = (org.apache.avro.io.DatumWriter<TimelineHomeRelatedAvro>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<TimelineHomeRelatedAvro>
    READER$ = (org.apache.avro.io.DatumReader<TimelineHomeRelatedAvro>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










