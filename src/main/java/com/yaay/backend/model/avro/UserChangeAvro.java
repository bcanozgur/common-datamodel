/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.yaay.backend.model.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class UserChangeAvro extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 2949393101184578810L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"UserChangeAvro\",\"namespace\":\"com.yaay.backend.model.avro\",\"fields\":[{\"name\":\"userID\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"userName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"fullName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"isVerified\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"operation\",\"type\":[\"null\",{\"type\":\"enum\",\"name\":\"OperationAvro\",\"symbols\":[\"CREATE\",\"UPDATE\",\"DELETE\"]}],\"default\":null},{\"name\":\"updateAt\",\"type\":[\"null\",{\"type\":\"long\",\"logicalType\":\"local-timestamp-millis\"}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();
  static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.LocalTimestampMillisConversion());
  }

  private static final BinaryMessageEncoder<UserChangeAvro> ENCODER =
      new BinaryMessageEncoder<UserChangeAvro>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<UserChangeAvro> DECODER =
      new BinaryMessageDecoder<UserChangeAvro>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<UserChangeAvro> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<UserChangeAvro> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<UserChangeAvro> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<UserChangeAvro>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this UserChangeAvro to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a UserChangeAvro from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a UserChangeAvro instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static UserChangeAvro fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.String userID;
  private java.lang.String userName;
  private java.lang.String fullName;
  private java.lang.Boolean isVerified;
  private com.yaay.backend.model.avro.OperationAvro operation;
  private java.time.LocalDateTime updateAt;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public UserChangeAvro() {}

  /**
   * All-args constructor.
   * @param userID The new value for userID
   * @param userName The new value for userName
   * @param fullName The new value for fullName
   * @param isVerified The new value for isVerified
   * @param operation The new value for operation
   * @param updateAt The new value for updateAt
   */
  public UserChangeAvro(java.lang.String userID, java.lang.String userName, java.lang.String fullName, java.lang.Boolean isVerified, com.yaay.backend.model.avro.OperationAvro operation, java.time.LocalDateTime updateAt) {
    this.userID = userID;
    this.userName = userName;
    this.fullName = fullName;
    this.isVerified = isVerified;
    this.operation = operation;
    this.updateAt = updateAt;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return userID;
    case 1: return userName;
    case 2: return fullName;
    case 3: return isVerified;
    case 4: return operation;
    case 5: return updateAt;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: userID = value$ != null ? value$.toString() : null; break;
    case 1: userName = value$ != null ? value$.toString() : null; break;
    case 2: fullName = value$ != null ? value$.toString() : null; break;
    case 3: isVerified = (java.lang.Boolean)value$; break;
    case 4: operation = (com.yaay.backend.model.avro.OperationAvro)value$; break;
    case 5: updateAt = (java.time.LocalDateTime)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'userID' field.
   * @return The value of the 'userID' field.
   */
  public java.lang.String getUserID() {
    return userID;
  }


  /**
   * Sets the value of the 'userID' field.
   * @param value the value to set.
   */
  public void setUserID(java.lang.String value) {
    this.userID = value;
  }

  /**
   * Gets the value of the 'userName' field.
   * @return The value of the 'userName' field.
   */
  public java.lang.String getUserName() {
    return userName;
  }


  /**
   * Sets the value of the 'userName' field.
   * @param value the value to set.
   */
  public void setUserName(java.lang.String value) {
    this.userName = value;
  }

  /**
   * Gets the value of the 'fullName' field.
   * @return The value of the 'fullName' field.
   */
  public java.lang.String getFullName() {
    return fullName;
  }


  /**
   * Sets the value of the 'fullName' field.
   * @param value the value to set.
   */
  public void setFullName(java.lang.String value) {
    this.fullName = value;
  }

  /**
   * Gets the value of the 'isVerified' field.
   * @return The value of the 'isVerified' field.
   */
  public java.lang.Boolean getIsVerified() {
    return isVerified;
  }


  /**
   * Sets the value of the 'isVerified' field.
   * @param value the value to set.
   */
  public void setIsVerified(java.lang.Boolean value) {
    this.isVerified = value;
  }

  /**
   * Gets the value of the 'operation' field.
   * @return The value of the 'operation' field.
   */
  public com.yaay.backend.model.avro.OperationAvro getOperation() {
    return operation;
  }


  /**
   * Sets the value of the 'operation' field.
   * @param value the value to set.
   */
  public void setOperation(com.yaay.backend.model.avro.OperationAvro value) {
    this.operation = value;
  }

  /**
   * Gets the value of the 'updateAt' field.
   * @return The value of the 'updateAt' field.
   */
  public java.time.LocalDateTime getUpdateAt() {
    return updateAt;
  }


  /**
   * Sets the value of the 'updateAt' field.
   * @param value the value to set.
   */
  public void setUpdateAt(java.time.LocalDateTime value) {
    this.updateAt = value;
  }

  /**
   * Creates a new UserChangeAvro RecordBuilder.
   * @return A new UserChangeAvro RecordBuilder
   */
  public static com.yaay.backend.model.avro.UserChangeAvro.Builder newBuilder() {
    return new com.yaay.backend.model.avro.UserChangeAvro.Builder();
  }

  /**
   * Creates a new UserChangeAvro RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new UserChangeAvro RecordBuilder
   */
  public static com.yaay.backend.model.avro.UserChangeAvro.Builder newBuilder(com.yaay.backend.model.avro.UserChangeAvro.Builder other) {
    if (other == null) {
      return new com.yaay.backend.model.avro.UserChangeAvro.Builder();
    } else {
      return new com.yaay.backend.model.avro.UserChangeAvro.Builder(other);
    }
  }

  /**
   * Creates a new UserChangeAvro RecordBuilder by copying an existing UserChangeAvro instance.
   * @param other The existing instance to copy.
   * @return A new UserChangeAvro RecordBuilder
   */
  public static com.yaay.backend.model.avro.UserChangeAvro.Builder newBuilder(com.yaay.backend.model.avro.UserChangeAvro other) {
    if (other == null) {
      return new com.yaay.backend.model.avro.UserChangeAvro.Builder();
    } else {
      return new com.yaay.backend.model.avro.UserChangeAvro.Builder(other);
    }
  }

  /**
   * RecordBuilder for UserChangeAvro instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<UserChangeAvro>
    implements org.apache.avro.data.RecordBuilder<UserChangeAvro> {

    private java.lang.String userID;
    private java.lang.String userName;
    private java.lang.String fullName;
    private java.lang.Boolean isVerified;
    private com.yaay.backend.model.avro.OperationAvro operation;
    private java.time.LocalDateTime updateAt;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.yaay.backend.model.avro.UserChangeAvro.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.userID)) {
        this.userID = data().deepCopy(fields()[0].schema(), other.userID);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.userName)) {
        this.userName = data().deepCopy(fields()[1].schema(), other.userName);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.fullName)) {
        this.fullName = data().deepCopy(fields()[2].schema(), other.fullName);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.isVerified)) {
        this.isVerified = data().deepCopy(fields()[3].schema(), other.isVerified);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.operation)) {
        this.operation = data().deepCopy(fields()[4].schema(), other.operation);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.updateAt)) {
        this.updateAt = data().deepCopy(fields()[5].schema(), other.updateAt);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
    }

    /**
     * Creates a Builder by copying an existing UserChangeAvro instance
     * @param other The existing instance to copy.
     */
    private Builder(com.yaay.backend.model.avro.UserChangeAvro other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.userID)) {
        this.userID = data().deepCopy(fields()[0].schema(), other.userID);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.userName)) {
        this.userName = data().deepCopy(fields()[1].schema(), other.userName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.fullName)) {
        this.fullName = data().deepCopy(fields()[2].schema(), other.fullName);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.isVerified)) {
        this.isVerified = data().deepCopy(fields()[3].schema(), other.isVerified);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.operation)) {
        this.operation = data().deepCopy(fields()[4].schema(), other.operation);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.updateAt)) {
        this.updateAt = data().deepCopy(fields()[5].schema(), other.updateAt);
        fieldSetFlags()[5] = true;
      }
    }

    /**
      * Gets the value of the 'userID' field.
      * @return The value.
      */
    public java.lang.String getUserID() {
      return userID;
    }


    /**
      * Sets the value of the 'userID' field.
      * @param value The value of 'userID'.
      * @return This builder.
      */
    public com.yaay.backend.model.avro.UserChangeAvro.Builder setUserID(java.lang.String value) {
      validate(fields()[0], value);
      this.userID = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'userID' field has been set.
      * @return True if the 'userID' field has been set, false otherwise.
      */
    public boolean hasUserID() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'userID' field.
      * @return This builder.
      */
    public com.yaay.backend.model.avro.UserChangeAvro.Builder clearUserID() {
      userID = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'userName' field.
      * @return The value.
      */
    public java.lang.String getUserName() {
      return userName;
    }


    /**
      * Sets the value of the 'userName' field.
      * @param value The value of 'userName'.
      * @return This builder.
      */
    public com.yaay.backend.model.avro.UserChangeAvro.Builder setUserName(java.lang.String value) {
      validate(fields()[1], value);
      this.userName = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'userName' field has been set.
      * @return True if the 'userName' field has been set, false otherwise.
      */
    public boolean hasUserName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'userName' field.
      * @return This builder.
      */
    public com.yaay.backend.model.avro.UserChangeAvro.Builder clearUserName() {
      userName = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'fullName' field.
      * @return The value.
      */
    public java.lang.String getFullName() {
      return fullName;
    }


    /**
      * Sets the value of the 'fullName' field.
      * @param value The value of 'fullName'.
      * @return This builder.
      */
    public com.yaay.backend.model.avro.UserChangeAvro.Builder setFullName(java.lang.String value) {
      validate(fields()[2], value);
      this.fullName = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'fullName' field has been set.
      * @return True if the 'fullName' field has been set, false otherwise.
      */
    public boolean hasFullName() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'fullName' field.
      * @return This builder.
      */
    public com.yaay.backend.model.avro.UserChangeAvro.Builder clearFullName() {
      fullName = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'isVerified' field.
      * @return The value.
      */
    public java.lang.Boolean getIsVerified() {
      return isVerified;
    }


    /**
      * Sets the value of the 'isVerified' field.
      * @param value The value of 'isVerified'.
      * @return This builder.
      */
    public com.yaay.backend.model.avro.UserChangeAvro.Builder setIsVerified(java.lang.Boolean value) {
      validate(fields()[3], value);
      this.isVerified = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'isVerified' field has been set.
      * @return True if the 'isVerified' field has been set, false otherwise.
      */
    public boolean hasIsVerified() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'isVerified' field.
      * @return This builder.
      */
    public com.yaay.backend.model.avro.UserChangeAvro.Builder clearIsVerified() {
      isVerified = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'operation' field.
      * @return The value.
      */
    public com.yaay.backend.model.avro.OperationAvro getOperation() {
      return operation;
    }


    /**
      * Sets the value of the 'operation' field.
      * @param value The value of 'operation'.
      * @return This builder.
      */
    public com.yaay.backend.model.avro.UserChangeAvro.Builder setOperation(com.yaay.backend.model.avro.OperationAvro value) {
      validate(fields()[4], value);
      this.operation = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'operation' field has been set.
      * @return True if the 'operation' field has been set, false otherwise.
      */
    public boolean hasOperation() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'operation' field.
      * @return This builder.
      */
    public com.yaay.backend.model.avro.UserChangeAvro.Builder clearOperation() {
      operation = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'updateAt' field.
      * @return The value.
      */
    public java.time.LocalDateTime getUpdateAt() {
      return updateAt;
    }


    /**
      * Sets the value of the 'updateAt' field.
      * @param value The value of 'updateAt'.
      * @return This builder.
      */
    public com.yaay.backend.model.avro.UserChangeAvro.Builder setUpdateAt(java.time.LocalDateTime value) {
      validate(fields()[5], value);
      this.updateAt = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'updateAt' field has been set.
      * @return True if the 'updateAt' field has been set, false otherwise.
      */
    public boolean hasUpdateAt() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'updateAt' field.
      * @return This builder.
      */
    public com.yaay.backend.model.avro.UserChangeAvro.Builder clearUpdateAt() {
      updateAt = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public UserChangeAvro build() {
      try {
        UserChangeAvro record = new UserChangeAvro();
        record.userID = fieldSetFlags()[0] ? this.userID : (java.lang.String) defaultValue(fields()[0]);
        record.userName = fieldSetFlags()[1] ? this.userName : (java.lang.String) defaultValue(fields()[1]);
        record.fullName = fieldSetFlags()[2] ? this.fullName : (java.lang.String) defaultValue(fields()[2]);
        record.isVerified = fieldSetFlags()[3] ? this.isVerified : (java.lang.Boolean) defaultValue(fields()[3]);
        record.operation = fieldSetFlags()[4] ? this.operation : (com.yaay.backend.model.avro.OperationAvro) defaultValue(fields()[4]);
        record.updateAt = fieldSetFlags()[5] ? this.updateAt : (java.time.LocalDateTime) defaultValue(fields()[5]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<UserChangeAvro>
    WRITER$ = (org.apache.avro.io.DatumWriter<UserChangeAvro>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<UserChangeAvro>
    READER$ = (org.apache.avro.io.DatumReader<UserChangeAvro>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










