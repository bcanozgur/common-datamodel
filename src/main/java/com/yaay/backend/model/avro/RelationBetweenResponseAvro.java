/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.yaay.backend.model.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class RelationBetweenResponseAvro extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 1523745536359009271L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"RelationBetweenResponseAvro\",\"namespace\":\"com.yaay.backend.model.avro\",\"fields\":[{\"name\":\"user1to2\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"RelationsAvro\",\"fields\":[{\"name\":\"blocked\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"follows\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"muted\",\"type\":[\"null\",\"boolean\"],\"default\":null}]}],\"default\":null},{\"name\":\"user2to1\",\"type\":[\"null\",\"RelationsAvro\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<RelationBetweenResponseAvro> ENCODER =
      new BinaryMessageEncoder<RelationBetweenResponseAvro>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<RelationBetweenResponseAvro> DECODER =
      new BinaryMessageDecoder<RelationBetweenResponseAvro>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<RelationBetweenResponseAvro> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<RelationBetweenResponseAvro> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<RelationBetweenResponseAvro> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<RelationBetweenResponseAvro>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this RelationBetweenResponseAvro to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a RelationBetweenResponseAvro from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a RelationBetweenResponseAvro instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static RelationBetweenResponseAvro fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private com.yaay.backend.model.avro.RelationsAvro user1to2;
  private com.yaay.backend.model.avro.RelationsAvro user2to1;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public RelationBetweenResponseAvro() {}

  /**
   * All-args constructor.
   * @param user1to2 The new value for user1to2
   * @param user2to1 The new value for user2to1
   */
  public RelationBetweenResponseAvro(com.yaay.backend.model.avro.RelationsAvro user1to2, com.yaay.backend.model.avro.RelationsAvro user2to1) {
    this.user1to2 = user1to2;
    this.user2to1 = user2to1;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return user1to2;
    case 1: return user2to1;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: user1to2 = (com.yaay.backend.model.avro.RelationsAvro)value$; break;
    case 1: user2to1 = (com.yaay.backend.model.avro.RelationsAvro)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'user1to2' field.
   * @return The value of the 'user1to2' field.
   */
  public com.yaay.backend.model.avro.RelationsAvro getUser1to2() {
    return user1to2;
  }


  /**
   * Sets the value of the 'user1to2' field.
   * @param value the value to set.
   */
  public void setUser1to2(com.yaay.backend.model.avro.RelationsAvro value) {
    this.user1to2 = value;
  }

  /**
   * Gets the value of the 'user2to1' field.
   * @return The value of the 'user2to1' field.
   */
  public com.yaay.backend.model.avro.RelationsAvro getUser2to1() {
    return user2to1;
  }


  /**
   * Sets the value of the 'user2to1' field.
   * @param value the value to set.
   */
  public void setUser2to1(com.yaay.backend.model.avro.RelationsAvro value) {
    this.user2to1 = value;
  }

  /**
   * Creates a new RelationBetweenResponseAvro RecordBuilder.
   * @return A new RelationBetweenResponseAvro RecordBuilder
   */
  public static com.yaay.backend.model.avro.RelationBetweenResponseAvro.Builder newBuilder() {
    return new com.yaay.backend.model.avro.RelationBetweenResponseAvro.Builder();
  }

  /**
   * Creates a new RelationBetweenResponseAvro RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new RelationBetweenResponseAvro RecordBuilder
   */
  public static com.yaay.backend.model.avro.RelationBetweenResponseAvro.Builder newBuilder(com.yaay.backend.model.avro.RelationBetweenResponseAvro.Builder other) {
    if (other == null) {
      return new com.yaay.backend.model.avro.RelationBetweenResponseAvro.Builder();
    } else {
      return new com.yaay.backend.model.avro.RelationBetweenResponseAvro.Builder(other);
    }
  }

  /**
   * Creates a new RelationBetweenResponseAvro RecordBuilder by copying an existing RelationBetweenResponseAvro instance.
   * @param other The existing instance to copy.
   * @return A new RelationBetweenResponseAvro RecordBuilder
   */
  public static com.yaay.backend.model.avro.RelationBetweenResponseAvro.Builder newBuilder(com.yaay.backend.model.avro.RelationBetweenResponseAvro other) {
    if (other == null) {
      return new com.yaay.backend.model.avro.RelationBetweenResponseAvro.Builder();
    } else {
      return new com.yaay.backend.model.avro.RelationBetweenResponseAvro.Builder(other);
    }
  }

  /**
   * RecordBuilder for RelationBetweenResponseAvro instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<RelationBetweenResponseAvro>
    implements org.apache.avro.data.RecordBuilder<RelationBetweenResponseAvro> {

    private com.yaay.backend.model.avro.RelationsAvro user1to2;
    private com.yaay.backend.model.avro.RelationsAvro.Builder user1to2Builder;
    private com.yaay.backend.model.avro.RelationsAvro user2to1;
    private com.yaay.backend.model.avro.RelationsAvro.Builder user2to1Builder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.yaay.backend.model.avro.RelationBetweenResponseAvro.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.user1to2)) {
        this.user1to2 = data().deepCopy(fields()[0].schema(), other.user1to2);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (other.hasUser1to2Builder()) {
        this.user1to2Builder = com.yaay.backend.model.avro.RelationsAvro.newBuilder(other.getUser1to2Builder());
      }
      if (isValidValue(fields()[1], other.user2to1)) {
        this.user2to1 = data().deepCopy(fields()[1].schema(), other.user2to1);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (other.hasUser2to1Builder()) {
        this.user2to1Builder = com.yaay.backend.model.avro.RelationsAvro.newBuilder(other.getUser2to1Builder());
      }
    }

    /**
     * Creates a Builder by copying an existing RelationBetweenResponseAvro instance
     * @param other The existing instance to copy.
     */
    private Builder(com.yaay.backend.model.avro.RelationBetweenResponseAvro other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.user1to2)) {
        this.user1to2 = data().deepCopy(fields()[0].schema(), other.user1to2);
        fieldSetFlags()[0] = true;
      }
      this.user1to2Builder = null;
      if (isValidValue(fields()[1], other.user2to1)) {
        this.user2to1 = data().deepCopy(fields()[1].schema(), other.user2to1);
        fieldSetFlags()[1] = true;
      }
      this.user2to1Builder = null;
    }

    /**
      * Gets the value of the 'user1to2' field.
      * @return The value.
      */
    public com.yaay.backend.model.avro.RelationsAvro getUser1to2() {
      return user1to2;
    }


    /**
      * Sets the value of the 'user1to2' field.
      * @param value The value of 'user1to2'.
      * @return This builder.
      */
    public com.yaay.backend.model.avro.RelationBetweenResponseAvro.Builder setUser1to2(com.yaay.backend.model.avro.RelationsAvro value) {
      validate(fields()[0], value);
      this.user1to2Builder = null;
      this.user1to2 = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'user1to2' field has been set.
      * @return True if the 'user1to2' field has been set, false otherwise.
      */
    public boolean hasUser1to2() {
      return fieldSetFlags()[0];
    }

    /**
     * Gets the Builder instance for the 'user1to2' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.yaay.backend.model.avro.RelationsAvro.Builder getUser1to2Builder() {
      if (user1to2Builder == null) {
        if (hasUser1to2()) {
          setUser1to2Builder(com.yaay.backend.model.avro.RelationsAvro.newBuilder(user1to2));
        } else {
          setUser1to2Builder(com.yaay.backend.model.avro.RelationsAvro.newBuilder());
        }
      }
      return user1to2Builder;
    }

    /**
     * Sets the Builder instance for the 'user1to2' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public com.yaay.backend.model.avro.RelationBetweenResponseAvro.Builder setUser1to2Builder(com.yaay.backend.model.avro.RelationsAvro.Builder value) {
      clearUser1to2();
      user1to2Builder = value;
      return this;
    }

    /**
     * Checks whether the 'user1to2' field has an active Builder instance
     * @return True if the 'user1to2' field has an active Builder instance
     */
    public boolean hasUser1to2Builder() {
      return user1to2Builder != null;
    }

    /**
      * Clears the value of the 'user1to2' field.
      * @return This builder.
      */
    public com.yaay.backend.model.avro.RelationBetweenResponseAvro.Builder clearUser1to2() {
      user1to2 = null;
      user1to2Builder = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'user2to1' field.
      * @return The value.
      */
    public com.yaay.backend.model.avro.RelationsAvro getUser2to1() {
      return user2to1;
    }


    /**
      * Sets the value of the 'user2to1' field.
      * @param value The value of 'user2to1'.
      * @return This builder.
      */
    public com.yaay.backend.model.avro.RelationBetweenResponseAvro.Builder setUser2to1(com.yaay.backend.model.avro.RelationsAvro value) {
      validate(fields()[1], value);
      this.user2to1Builder = null;
      this.user2to1 = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'user2to1' field has been set.
      * @return True if the 'user2to1' field has been set, false otherwise.
      */
    public boolean hasUser2to1() {
      return fieldSetFlags()[1];
    }

    /**
     * Gets the Builder instance for the 'user2to1' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.yaay.backend.model.avro.RelationsAvro.Builder getUser2to1Builder() {
      if (user2to1Builder == null) {
        if (hasUser2to1()) {
          setUser2to1Builder(com.yaay.backend.model.avro.RelationsAvro.newBuilder(user2to1));
        } else {
          setUser2to1Builder(com.yaay.backend.model.avro.RelationsAvro.newBuilder());
        }
      }
      return user2to1Builder;
    }

    /**
     * Sets the Builder instance for the 'user2to1' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public com.yaay.backend.model.avro.RelationBetweenResponseAvro.Builder setUser2to1Builder(com.yaay.backend.model.avro.RelationsAvro.Builder value) {
      clearUser2to1();
      user2to1Builder = value;
      return this;
    }

    /**
     * Checks whether the 'user2to1' field has an active Builder instance
     * @return True if the 'user2to1' field has an active Builder instance
     */
    public boolean hasUser2to1Builder() {
      return user2to1Builder != null;
    }

    /**
      * Clears the value of the 'user2to1' field.
      * @return This builder.
      */
    public com.yaay.backend.model.avro.RelationBetweenResponseAvro.Builder clearUser2to1() {
      user2to1 = null;
      user2to1Builder = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public RelationBetweenResponseAvro build() {
      try {
        RelationBetweenResponseAvro record = new RelationBetweenResponseAvro();
        if (user1to2Builder != null) {
          try {
            record.user1to2 = this.user1to2Builder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("user1to2"));
            throw e;
          }
        } else {
          record.user1to2 = fieldSetFlags()[0] ? this.user1to2 : (com.yaay.backend.model.avro.RelationsAvro) defaultValue(fields()[0]);
        }
        if (user2to1Builder != null) {
          try {
            record.user2to1 = this.user2to1Builder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("user2to1"));
            throw e;
          }
        } else {
          record.user2to1 = fieldSetFlags()[1] ? this.user2to1 : (com.yaay.backend.model.avro.RelationsAvro) defaultValue(fields()[1]);
        }
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<RelationBetweenResponseAvro>
    WRITER$ = (org.apache.avro.io.DatumWriter<RelationBetweenResponseAvro>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<RelationBetweenResponseAvro>
    READER$ = (org.apache.avro.io.DatumReader<RelationBetweenResponseAvro>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.user1to2 == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.user1to2.customEncode(out);
    }

    if (this.user2to1 == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.user2to1.customEncode(out);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.user1to2 = null;
      } else {
        if (this.user1to2 == null) {
          this.user1to2 = new com.yaay.backend.model.avro.RelationsAvro();
        }
        this.user1to2.customDecode(in);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.user2to1 = null;
      } else {
        if (this.user2to1 == null) {
          this.user2to1 = new com.yaay.backend.model.avro.RelationsAvro();
        }
        this.user2to1.customDecode(in);
      }

    } else {
      for (int i = 0; i < 2; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.user1to2 = null;
          } else {
            if (this.user1to2 == null) {
              this.user1to2 = new com.yaay.backend.model.avro.RelationsAvro();
            }
            this.user1to2.customDecode(in);
          }
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.user2to1 = null;
          } else {
            if (this.user2to1 == null) {
              this.user2to1 = new com.yaay.backend.model.avro.RelationsAvro();
            }
            this.user2to1.customDecode(in);
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










