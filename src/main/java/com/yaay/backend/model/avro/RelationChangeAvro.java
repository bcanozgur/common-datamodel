/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.yaay.backend.model.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class RelationChangeAvro extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -515213044881609865L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"RelationChangeAvro\",\"namespace\":\"com.yaay.backend.model.avro\",\"fields\":[{\"name\":\"sourceId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"targetId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"relation\",\"type\":[\"null\",{\"type\":\"enum\",\"name\":\"RelationAvro\",\"symbols\":[\"MUTED\",\"FOLLOWS\",\"BLOCKED\"]}],\"default\":null},{\"name\":\"deleted\",\"type\":[\"null\",\"boolean\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<RelationChangeAvro> ENCODER =
      new BinaryMessageEncoder<RelationChangeAvro>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<RelationChangeAvro> DECODER =
      new BinaryMessageDecoder<RelationChangeAvro>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<RelationChangeAvro> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<RelationChangeAvro> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<RelationChangeAvro> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<RelationChangeAvro>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this RelationChangeAvro to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a RelationChangeAvro from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a RelationChangeAvro instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static RelationChangeAvro fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.String sourceId;
  private java.lang.String targetId;
  private com.yaay.backend.model.avro.RelationAvro relation;
  private java.lang.Boolean deleted;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public RelationChangeAvro() {}

  /**
   * All-args constructor.
   * @param sourceId The new value for sourceId
   * @param targetId The new value for targetId
   * @param relation The new value for relation
   * @param deleted The new value for deleted
   */
  public RelationChangeAvro(java.lang.String sourceId, java.lang.String targetId, com.yaay.backend.model.avro.RelationAvro relation, java.lang.Boolean deleted) {
    this.sourceId = sourceId;
    this.targetId = targetId;
    this.relation = relation;
    this.deleted = deleted;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return sourceId;
    case 1: return targetId;
    case 2: return relation;
    case 3: return deleted;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: sourceId = value$ != null ? value$.toString() : null; break;
    case 1: targetId = value$ != null ? value$.toString() : null; break;
    case 2: relation = (com.yaay.backend.model.avro.RelationAvro)value$; break;
    case 3: deleted = (java.lang.Boolean)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'sourceId' field.
   * @return The value of the 'sourceId' field.
   */
  public java.lang.String getSourceId() {
    return sourceId;
  }


  /**
   * Sets the value of the 'sourceId' field.
   * @param value the value to set.
   */
  public void setSourceId(java.lang.String value) {
    this.sourceId = value;
  }

  /**
   * Gets the value of the 'targetId' field.
   * @return The value of the 'targetId' field.
   */
  public java.lang.String getTargetId() {
    return targetId;
  }


  /**
   * Sets the value of the 'targetId' field.
   * @param value the value to set.
   */
  public void setTargetId(java.lang.String value) {
    this.targetId = value;
  }

  /**
   * Gets the value of the 'relation' field.
   * @return The value of the 'relation' field.
   */
  public com.yaay.backend.model.avro.RelationAvro getRelation() {
    return relation;
  }


  /**
   * Sets the value of the 'relation' field.
   * @param value the value to set.
   */
  public void setRelation(com.yaay.backend.model.avro.RelationAvro value) {
    this.relation = value;
  }

  /**
   * Gets the value of the 'deleted' field.
   * @return The value of the 'deleted' field.
   */
  public java.lang.Boolean getDeleted() {
    return deleted;
  }


  /**
   * Sets the value of the 'deleted' field.
   * @param value the value to set.
   */
  public void setDeleted(java.lang.Boolean value) {
    this.deleted = value;
  }

  /**
   * Creates a new RelationChangeAvro RecordBuilder.
   * @return A new RelationChangeAvro RecordBuilder
   */
  public static com.yaay.backend.model.avro.RelationChangeAvro.Builder newBuilder() {
    return new com.yaay.backend.model.avro.RelationChangeAvro.Builder();
  }

  /**
   * Creates a new RelationChangeAvro RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new RelationChangeAvro RecordBuilder
   */
  public static com.yaay.backend.model.avro.RelationChangeAvro.Builder newBuilder(com.yaay.backend.model.avro.RelationChangeAvro.Builder other) {
    if (other == null) {
      return new com.yaay.backend.model.avro.RelationChangeAvro.Builder();
    } else {
      return new com.yaay.backend.model.avro.RelationChangeAvro.Builder(other);
    }
  }

  /**
   * Creates a new RelationChangeAvro RecordBuilder by copying an existing RelationChangeAvro instance.
   * @param other The existing instance to copy.
   * @return A new RelationChangeAvro RecordBuilder
   */
  public static com.yaay.backend.model.avro.RelationChangeAvro.Builder newBuilder(com.yaay.backend.model.avro.RelationChangeAvro other) {
    if (other == null) {
      return new com.yaay.backend.model.avro.RelationChangeAvro.Builder();
    } else {
      return new com.yaay.backend.model.avro.RelationChangeAvro.Builder(other);
    }
  }

  /**
   * RecordBuilder for RelationChangeAvro instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<RelationChangeAvro>
    implements org.apache.avro.data.RecordBuilder<RelationChangeAvro> {

    private java.lang.String sourceId;
    private java.lang.String targetId;
    private com.yaay.backend.model.avro.RelationAvro relation;
    private java.lang.Boolean deleted;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.yaay.backend.model.avro.RelationChangeAvro.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.sourceId)) {
        this.sourceId = data().deepCopy(fields()[0].schema(), other.sourceId);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.targetId)) {
        this.targetId = data().deepCopy(fields()[1].schema(), other.targetId);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.relation)) {
        this.relation = data().deepCopy(fields()[2].schema(), other.relation);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.deleted)) {
        this.deleted = data().deepCopy(fields()[3].schema(), other.deleted);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
    }

    /**
     * Creates a Builder by copying an existing RelationChangeAvro instance
     * @param other The existing instance to copy.
     */
    private Builder(com.yaay.backend.model.avro.RelationChangeAvro other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.sourceId)) {
        this.sourceId = data().deepCopy(fields()[0].schema(), other.sourceId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.targetId)) {
        this.targetId = data().deepCopy(fields()[1].schema(), other.targetId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.relation)) {
        this.relation = data().deepCopy(fields()[2].schema(), other.relation);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.deleted)) {
        this.deleted = data().deepCopy(fields()[3].schema(), other.deleted);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'sourceId' field.
      * @return The value.
      */
    public java.lang.String getSourceId() {
      return sourceId;
    }


    /**
      * Sets the value of the 'sourceId' field.
      * @param value The value of 'sourceId'.
      * @return This builder.
      */
    public com.yaay.backend.model.avro.RelationChangeAvro.Builder setSourceId(java.lang.String value) {
      validate(fields()[0], value);
      this.sourceId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'sourceId' field has been set.
      * @return True if the 'sourceId' field has been set, false otherwise.
      */
    public boolean hasSourceId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'sourceId' field.
      * @return This builder.
      */
    public com.yaay.backend.model.avro.RelationChangeAvro.Builder clearSourceId() {
      sourceId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'targetId' field.
      * @return The value.
      */
    public java.lang.String getTargetId() {
      return targetId;
    }


    /**
      * Sets the value of the 'targetId' field.
      * @param value The value of 'targetId'.
      * @return This builder.
      */
    public com.yaay.backend.model.avro.RelationChangeAvro.Builder setTargetId(java.lang.String value) {
      validate(fields()[1], value);
      this.targetId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'targetId' field has been set.
      * @return True if the 'targetId' field has been set, false otherwise.
      */
    public boolean hasTargetId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'targetId' field.
      * @return This builder.
      */
    public com.yaay.backend.model.avro.RelationChangeAvro.Builder clearTargetId() {
      targetId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'relation' field.
      * @return The value.
      */
    public com.yaay.backend.model.avro.RelationAvro getRelation() {
      return relation;
    }


    /**
      * Sets the value of the 'relation' field.
      * @param value The value of 'relation'.
      * @return This builder.
      */
    public com.yaay.backend.model.avro.RelationChangeAvro.Builder setRelation(com.yaay.backend.model.avro.RelationAvro value) {
      validate(fields()[2], value);
      this.relation = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'relation' field has been set.
      * @return True if the 'relation' field has been set, false otherwise.
      */
    public boolean hasRelation() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'relation' field.
      * @return This builder.
      */
    public com.yaay.backend.model.avro.RelationChangeAvro.Builder clearRelation() {
      relation = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'deleted' field.
      * @return The value.
      */
    public java.lang.Boolean getDeleted() {
      return deleted;
    }


    /**
      * Sets the value of the 'deleted' field.
      * @param value The value of 'deleted'.
      * @return This builder.
      */
    public com.yaay.backend.model.avro.RelationChangeAvro.Builder setDeleted(java.lang.Boolean value) {
      validate(fields()[3], value);
      this.deleted = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'deleted' field has been set.
      * @return True if the 'deleted' field has been set, false otherwise.
      */
    public boolean hasDeleted() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'deleted' field.
      * @return This builder.
      */
    public com.yaay.backend.model.avro.RelationChangeAvro.Builder clearDeleted() {
      deleted = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public RelationChangeAvro build() {
      try {
        RelationChangeAvro record = new RelationChangeAvro();
        record.sourceId = fieldSetFlags()[0] ? this.sourceId : (java.lang.String) defaultValue(fields()[0]);
        record.targetId = fieldSetFlags()[1] ? this.targetId : (java.lang.String) defaultValue(fields()[1]);
        record.relation = fieldSetFlags()[2] ? this.relation : (com.yaay.backend.model.avro.RelationAvro) defaultValue(fields()[2]);
        record.deleted = fieldSetFlags()[3] ? this.deleted : (java.lang.Boolean) defaultValue(fields()[3]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<RelationChangeAvro>
    WRITER$ = (org.apache.avro.io.DatumWriter<RelationChangeAvro>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<RelationChangeAvro>
    READER$ = (org.apache.avro.io.DatumReader<RelationChangeAvro>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.sourceId == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.sourceId);
    }

    if (this.targetId == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.targetId);
    }

    if (this.relation == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeEnum(this.relation.ordinal());
    }

    if (this.deleted == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeBoolean(this.deleted);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.sourceId = null;
      } else {
        this.sourceId = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.targetId = null;
      } else {
        this.targetId = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.relation = null;
      } else {
        this.relation = com.yaay.backend.model.avro.RelationAvro.values()[in.readEnum()];
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.deleted = null;
      } else {
        this.deleted = in.readBoolean();
      }

    } else {
      for (int i = 0; i < 4; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.sourceId = null;
          } else {
            this.sourceId = in.readString();
          }
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.targetId = null;
          } else {
            this.targetId = in.readString();
          }
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.relation = null;
          } else {
            this.relation = com.yaay.backend.model.avro.RelationAvro.values()[in.readEnum()];
          }
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.deleted = null;
          } else {
            this.deleted = in.readBoolean();
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










