/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.yaay.backend.model.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class RelationsAvro extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 4585682530018408181L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"RelationsAvro\",\"namespace\":\"com.yaay.backend.model.avro\",\"fields\":[{\"name\":\"blocked\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"follows\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"muted\",\"type\":[\"null\",\"boolean\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<RelationsAvro> ENCODER =
      new BinaryMessageEncoder<RelationsAvro>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<RelationsAvro> DECODER =
      new BinaryMessageDecoder<RelationsAvro>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<RelationsAvro> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<RelationsAvro> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<RelationsAvro> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<RelationsAvro>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this RelationsAvro to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a RelationsAvro from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a RelationsAvro instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static RelationsAvro fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.Boolean blocked;
  private java.lang.Boolean follows;
  private java.lang.Boolean muted;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public RelationsAvro() {}

  /**
   * All-args constructor.
   * @param blocked The new value for blocked
   * @param follows The new value for follows
   * @param muted The new value for muted
   */
  public RelationsAvro(java.lang.Boolean blocked, java.lang.Boolean follows, java.lang.Boolean muted) {
    this.blocked = blocked;
    this.follows = follows;
    this.muted = muted;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return blocked;
    case 1: return follows;
    case 2: return muted;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: blocked = (java.lang.Boolean)value$; break;
    case 1: follows = (java.lang.Boolean)value$; break;
    case 2: muted = (java.lang.Boolean)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'blocked' field.
   * @return The value of the 'blocked' field.
   */
  public java.lang.Boolean getBlocked() {
    return blocked;
  }


  /**
   * Sets the value of the 'blocked' field.
   * @param value the value to set.
   */
  public void setBlocked(java.lang.Boolean value) {
    this.blocked = value;
  }

  /**
   * Gets the value of the 'follows' field.
   * @return The value of the 'follows' field.
   */
  public java.lang.Boolean getFollows() {
    return follows;
  }


  /**
   * Sets the value of the 'follows' field.
   * @param value the value to set.
   */
  public void setFollows(java.lang.Boolean value) {
    this.follows = value;
  }

  /**
   * Gets the value of the 'muted' field.
   * @return The value of the 'muted' field.
   */
  public java.lang.Boolean getMuted() {
    return muted;
  }


  /**
   * Sets the value of the 'muted' field.
   * @param value the value to set.
   */
  public void setMuted(java.lang.Boolean value) {
    this.muted = value;
  }

  /**
   * Creates a new RelationsAvro RecordBuilder.
   * @return A new RelationsAvro RecordBuilder
   */
  public static com.yaay.backend.model.avro.RelationsAvro.Builder newBuilder() {
    return new com.yaay.backend.model.avro.RelationsAvro.Builder();
  }

  /**
   * Creates a new RelationsAvro RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new RelationsAvro RecordBuilder
   */
  public static com.yaay.backend.model.avro.RelationsAvro.Builder newBuilder(com.yaay.backend.model.avro.RelationsAvro.Builder other) {
    if (other == null) {
      return new com.yaay.backend.model.avro.RelationsAvro.Builder();
    } else {
      return new com.yaay.backend.model.avro.RelationsAvro.Builder(other);
    }
  }

  /**
   * Creates a new RelationsAvro RecordBuilder by copying an existing RelationsAvro instance.
   * @param other The existing instance to copy.
   * @return A new RelationsAvro RecordBuilder
   */
  public static com.yaay.backend.model.avro.RelationsAvro.Builder newBuilder(com.yaay.backend.model.avro.RelationsAvro other) {
    if (other == null) {
      return new com.yaay.backend.model.avro.RelationsAvro.Builder();
    } else {
      return new com.yaay.backend.model.avro.RelationsAvro.Builder(other);
    }
  }

  /**
   * RecordBuilder for RelationsAvro instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<RelationsAvro>
    implements org.apache.avro.data.RecordBuilder<RelationsAvro> {

    private java.lang.Boolean blocked;
    private java.lang.Boolean follows;
    private java.lang.Boolean muted;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.yaay.backend.model.avro.RelationsAvro.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.blocked)) {
        this.blocked = data().deepCopy(fields()[0].schema(), other.blocked);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.follows)) {
        this.follows = data().deepCopy(fields()[1].schema(), other.follows);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.muted)) {
        this.muted = data().deepCopy(fields()[2].schema(), other.muted);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
    }

    /**
     * Creates a Builder by copying an existing RelationsAvro instance
     * @param other The existing instance to copy.
     */
    private Builder(com.yaay.backend.model.avro.RelationsAvro other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.blocked)) {
        this.blocked = data().deepCopy(fields()[0].schema(), other.blocked);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.follows)) {
        this.follows = data().deepCopy(fields()[1].schema(), other.follows);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.muted)) {
        this.muted = data().deepCopy(fields()[2].schema(), other.muted);
        fieldSetFlags()[2] = true;
      }
    }

    /**
      * Gets the value of the 'blocked' field.
      * @return The value.
      */
    public java.lang.Boolean getBlocked() {
      return blocked;
    }


    /**
      * Sets the value of the 'blocked' field.
      * @param value The value of 'blocked'.
      * @return This builder.
      */
    public com.yaay.backend.model.avro.RelationsAvro.Builder setBlocked(java.lang.Boolean value) {
      validate(fields()[0], value);
      this.blocked = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'blocked' field has been set.
      * @return True if the 'blocked' field has been set, false otherwise.
      */
    public boolean hasBlocked() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'blocked' field.
      * @return This builder.
      */
    public com.yaay.backend.model.avro.RelationsAvro.Builder clearBlocked() {
      blocked = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'follows' field.
      * @return The value.
      */
    public java.lang.Boolean getFollows() {
      return follows;
    }


    /**
      * Sets the value of the 'follows' field.
      * @param value The value of 'follows'.
      * @return This builder.
      */
    public com.yaay.backend.model.avro.RelationsAvro.Builder setFollows(java.lang.Boolean value) {
      validate(fields()[1], value);
      this.follows = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'follows' field has been set.
      * @return True if the 'follows' field has been set, false otherwise.
      */
    public boolean hasFollows() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'follows' field.
      * @return This builder.
      */
    public com.yaay.backend.model.avro.RelationsAvro.Builder clearFollows() {
      follows = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'muted' field.
      * @return The value.
      */
    public java.lang.Boolean getMuted() {
      return muted;
    }


    /**
      * Sets the value of the 'muted' field.
      * @param value The value of 'muted'.
      * @return This builder.
      */
    public com.yaay.backend.model.avro.RelationsAvro.Builder setMuted(java.lang.Boolean value) {
      validate(fields()[2], value);
      this.muted = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'muted' field has been set.
      * @return True if the 'muted' field has been set, false otherwise.
      */
    public boolean hasMuted() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'muted' field.
      * @return This builder.
      */
    public com.yaay.backend.model.avro.RelationsAvro.Builder clearMuted() {
      muted = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public RelationsAvro build() {
      try {
        RelationsAvro record = new RelationsAvro();
        record.blocked = fieldSetFlags()[0] ? this.blocked : (java.lang.Boolean) defaultValue(fields()[0]);
        record.follows = fieldSetFlags()[1] ? this.follows : (java.lang.Boolean) defaultValue(fields()[1]);
        record.muted = fieldSetFlags()[2] ? this.muted : (java.lang.Boolean) defaultValue(fields()[2]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<RelationsAvro>
    WRITER$ = (org.apache.avro.io.DatumWriter<RelationsAvro>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<RelationsAvro>
    READER$ = (org.apache.avro.io.DatumReader<RelationsAvro>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.blocked == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeBoolean(this.blocked);
    }

    if (this.follows == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeBoolean(this.follows);
    }

    if (this.muted == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeBoolean(this.muted);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.blocked = null;
      } else {
        this.blocked = in.readBoolean();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.follows = null;
      } else {
        this.follows = in.readBoolean();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.muted = null;
      } else {
        this.muted = in.readBoolean();
      }

    } else {
      for (int i = 0; i < 3; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.blocked = null;
          } else {
            this.blocked = in.readBoolean();
          }
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.follows = null;
          } else {
            this.follows = in.readBoolean();
          }
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.muted = null;
          } else {
            this.muted = in.readBoolean();
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










